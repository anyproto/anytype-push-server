syntax = "proto3";
package pushproto;

option go_package = "pushclient/pushapi";

enum ErrCodes {
  Unexpected = 0;
  InvalidSignature = 1;
  InvalidTopicSignature = 2;
  SpaceExists = 3;
  NoValidTopics = 4;
  ErrorOffset = 1200;
}


service Push {
  rpc SetToken(SetTokenRequest) returns (Ok);
  rpc RevokeToken(Ok) returns (Ok);
  rpc CreateSpace(CreateSpaceRequest) returns (Ok);
  rpc RemoveSpace(RemoveSpaceRequest) returns (Ok);
  rpc Subscriptions(SubscriptionsRequest) returns (SubscriptionsResponse);
  rpc Subscribe(SubscribeRequest) returns (Ok);
  rpc Unsubscribe(UnsubscribeRequest) returns (Ok);
  rpc SubscribeAll(SubscribeAllRequest) returns (Ok);
  rpc Notify(NotifyRequest) returns (Ok);
}

enum Platform {
  IOS = 0;
  Android = 1;
}

message Topics {
  repeated Topic topics = 1;
}

message Topic {
  bytes spaceKey = 1;
  string topic = 2;
  // space private key
  bytes signature = 3;
}

message SetTokenRequest {
  Platform platform = 1;
  string token = 2;
}

message CreateSpaceRequest {
  bytes spaceKey = 1;
  // spacePrivateKey.Sign(identity)
  bytes accountSignature = 2;
}

message RemoveSpaceRequest {
  bytes spaceKey = 1;
  // spacePrivateKey.Sign(identity)
  bytes accountSignature = 2;
}

message SubscriptionsRequest {}

message SubscriptionsResponse {
  Topics topics = 1;
}

message SubscribeRequest {
  Topics topics = 1;
}

message UnsubscribeRequest {
  Topics topics = 1;
}


message SubscribeAllRequest {
  Topics topics = 1;
}

message NotifyRequest {
  Topics topics = 1;
  Message message = 2;
}

message Message {
  string keyId = 1;
  bytes payload = 2;
  bytes signature = 3;
}

message Ok {}

